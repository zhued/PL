[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0mInitial source changes: [0m
[0m[[0mdebug[0m] [0m	removed:Set()[0m
[0m[[0mdebug[0m] [0m	added: Set(/Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3-edzh3452.scala, /Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3.scala, /Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/jsy/lab3/ast.scala)[0m
[0m[[0mdebug[0m] [0m	modified: Set()[0m
[0m[[0mdebug[0m] [0mRemoved products: Set()[0m
[0m[[0mdebug[0m] [0mExternal API changes: API Changes: Set()[0m
[0m[[0mdebug[0m] [0mModified binary dependencies: Set()[0m
[0m[[0mdebug[0m] [0mInitial directly invalidated sources: Set(/Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3-edzh3452.scala, /Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3.scala, /Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/jsy/lab3/ast.scala)[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0mSources indirectly invalidated by:[0m
[0m[[0mdebug[0m] [0m	product: Set()[0m
[0m[[0mdebug[0m] [0m	binary dep: Set()[0m
[0m[[0mdebug[0m] [0m	external source: Set()[0m
[0m[[0mdebug[0m] [0mAll initially invalidated sources: Set(/Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3-edzh3452.scala, /Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3.scala, /Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/jsy/lab3/ast.scala)[0m
[0m[[0mdebug[0m] [0mRecompiling all 3 sources: invalidated sources (3) exceeded 50.0% of all sources[0m
[0m[[0minfo[0m] [0mCompiling 3 Scala sources to /Users/edward/Dropbox/Principles of Programming Languages/Lab3/target/scala-2.10/classes...[0m
[0m[[0mdebug[0m] [0mGetting compiler-interface from component compiler for Scala 2.10.3[0m
[0m[[0mdebug[0m] [0mGetting compiler-interface from component compiler for Scala 2.10.3[0m
[0m[[0mdebug[0m] [0mRunning cached compiler 45666e90, interfacing (CompilerInterface) with Scala compiler version 2.10.3[0m
[0m[[0mdebug[0m] [0mCalling Scala compiler with arguments  (CompilerInterface):[0m
[0m[[0mdebug[0m] [0m	-bootclasspath[0m
[0m[[0mdebug[0m] [0m	/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/classes:/Users/edward/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.10.3.jar[0m
[0m[[0mdebug[0m] [0m	-classpath[0m
[0m[[0mdebug[0m] [0m	/Users/edward/Dropbox/Principles of Programming Languages/Lab3/target/scala-2.10/classes:/Users/edward/Dropbox/Principles of Programming Languages/Lab3/lib/liblab3.jar:/Users/edward/Dropbox/Principles of Programming Languages/Lab3/lib/scalatest_2.10-2.0.jar[0m
[0m[[33mwarn[0m] [0m/Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3-edzh3452.scala:275: match may not be exhaustive.[0m
[0m[[33mwarn[0m] [0mIt would fail on the following inputs: And, Eq, Ge, Gt, Le, Lt, Ne, Or, Plus, Seq[0m
[0m[[33mwarn[0m] [0m      case Binary(bop @ (Minus | Times | Div), v1, v2) if (isValue(v1) && isValue(v2)) => bop match {[0m
[0m[[33mwarn[0m] [0m                                                                                          ^[0m
[0m[[33mwarn[0m] [0m/Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3-edzh3452.scala:282: match may not be exhaustive.[0m
[0m[[33mwarn[0m] [0mIt would fail on the following inputs: And, Div, Eq, Minus, Ne, Or, Plus, Seq, Times[0m
[0m[[33mwarn[0m] [0m      case Binary(bop @ (Lt | Le | Gt | Ge), v1, v2) if (isValue(v1) && isValue(v2)) => bop match {[0m
[0m[[33mwarn[0m] [0m                                                                                        ^[0m
[0m[[33mwarn[0m] [0m/Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3-edzh3452.scala:290: match may not be exhaustive.[0m
[0m[[33mwarn[0m] [0mIt would fail on the following inputs: And, Div, Eq, Minus, Ne, Or, Plus, Seq, Times[0m
[0m[[33mwarn[0m] [0m      case Binary(bop @ (Lt | Le | Gt | Ge), S(v1), S(v2)) => bop match {[0m
[0m[[33mwarn[0m] [0m                                                              ^[0m
[0m[[33mwarn[0m] [0m/Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3-edzh3452.scala:298: match may not be exhaustive.[0m
[0m[[33mwarn[0m] [0mIt would fail on the following inputs: (And, B(_), Expr()), (And, B(_), If(_, _, _)), (And, Binary(_, _, _), Binary(_, _, _)), (And, Binary(_, _, _), If(_, _, _)), (And, Call(_, _), B(_)), (And, Call(_, _), Binary(_, _, _)), (And, Call(_, _), ConstDecl(_, _, _)), (And, Call(_, _), Expr()), (And, Call(_, _), Function(_, _, _)), (And, Call(_, _), If(_, _, _)), (And, Call(_, _), N(_)), (And, Call(_, _), Print(_)), (And, Call(_, _), S(_)), (And, Call(_, _), Unary(_, _)), (And, Call(_, _), Undefined), (And, Call(_, _), Var(_)), (And, ConstDecl(_, _, _), If(_, _, _)), (And, Expr(), Expr()), (And, Function(_, _, _), Expr()), (And, Function(_, _, _), If(_, _, _)), (And, If(_, _, _), Expr()), (And, If(_, _, _), If(_, _, _)), (And, N(_), If(_, _, _)), (And, Print(_), If(_, _, _)), (And, S(_), Call(_, _)), (And, S(_), If(_, _, _)), (And, Unary(_, _), If(_, _, _)), (And, Undefined, If(_, _, _)), (And, Var(_), If(_, _, _)), (Bop(), B(_), Expr()), (Bop(), Binary(_, _, _), Expr()), (Bop(), Call(_, _), Expr()), (Bop(), ConstDecl(_, _, _), Expr()), (Bop(), Function(_, _, _), Expr()), (Bop(), If(_, _, _), Expr()), (Bop(), N(_), Expr()), (Bop(), Print(_), Expr()), (Bop(), Unary(_, _), Expr()), (Bop(), Undefined, Expr()), (Bop(), Var(_), Expr()), (Div, B(_), Expr()), (Div, Binary(_, _, _), Binary(_, _, _)), (Div, Call(_, _), If(_, _, _)), (Div, ConstDecl(_, _, _), Expr()), (Div, Expr(), Expr()), (Div, If(_, _, _), Expr()), (Div, S(_), Call(_, _)), (Ge, B(_), Expr()), (Ge, Binary(_, _, _), Binary(_, _, _)), (Ge, Binary(_, _, _), Expr()), (Ge, Call(_, _), Expr()), (Ge, Call(_, _), If(_, _, _)), (Ge, ConstDecl(_, _, _), Expr()), (Ge, Expr(), Expr()), (Ge, Function(_, _, _), Expr()), (Ge, If(_, _, _), Expr()), (Ge, N(_), Expr()), (Ge, Print(_), Expr()), (Ge, S(_), Call(_, _)), (Ge, Unary(_, _), Expr()), (Ge, Undefined, Expr()), (Ge, Var(_), Expr()), (Gt, B(_), Call(_, _)), (Gt, Binary(_, _, _), Call(_, _)), (Gt, Call(_, _), Call(_, _)), (Gt, Call(_, _), If(_, _, _)), (Gt, ConstDecl(_, _, _), Call(_, _)), (Gt, Expr(), Expr()), (Gt, Function(_, _, _), Call(_, _)), (Gt, If(_, _, _), Call(_, _)), (Gt, If(_, _, _), Expr()), (Gt, If(_, _, _), Print(_)), (Gt, N(_), Call(_, _)), (Gt, Print(_), Call(_, _)), (Gt, S(_), B(_)), (Gt, S(_), Binary(_, _, _)), (Gt, S(_), Call(_, _)), (Gt, S(_), ConstDecl(_, _, _)), (Gt, S(_), Function(_, _, _)), (Gt, S(_), If(_, _, _)), (Gt, S(_), N(_)), (Gt, S(_), Print(_)), (Gt, S(_), S(_)), (Gt, S(_), Unary(_, _)), (Gt, S(_), Undefined), (Gt, S(_), Var(_)), (Gt, Unary(_, _), Call(_, _)), (Gt, Undefined, Call(_, _)), (Gt, Var(_), Call(_, _)), (Le, B(_), Expr()), (Le, Binary(_, _, _), Binary(_, _, _)), (Le, Call(_, _), If(_, _, _)), (Le, ConstDecl(_, _, _), Expr()), (Le, Expr(), Expr()), (Le, If(_, _, _), Expr()), (Le, S(_), Call(_, _)), (Lt, B(_), Expr()), (Lt, Binary(_, _, _), Binary(_, _, _)), (Lt, Binary(_, _, _), Expr()), (Lt, Call(_, _), If(_, _, _)), (Lt, ConstDecl(_, _, _), Expr()), (Lt, Expr(), Expr()), (Lt, Function(_, _, _), Expr()), (Lt, If(_, _, _), Expr()), (Lt, N(_), Expr()), (Lt, Print(_), Expr()), (Lt, S(_), Call(_, _)), (Lt, Unary(_, _), Expr()), (Lt, Undefined, Expr()), (Lt, Var(_), Expr()), (Minus, B(_), Expr()), (Minus, Binary(_, _, _), Binary(_, _, _)), (Minus, Call(_, _), If(_, _, _)), (Minus, ConstDecl(_, _, _), Expr()), (Minus, Expr(), Expr()), (Minus, If(_, _, _), Expr()), (Minus, S(_), Call(_, _)), (Or, B(_), Expr()), (Or, Binary(_, _, _), Binary(_, _, _)), (Or, Call(_, _), If(_, _, _)), (Or, ConstDecl(_, _, _), Expr()), (Or, Expr(), Expr()), (Or, If(_, _, _), Expr()), (Or, S(_), Call(_, _)), (Plus, B(_), Expr()), (Plus, Binary(_, _, _), Binary(_, _, _)), (Plus, Binary(_, _, _), Expr()), (Plus, Call(_, _), Expr()), (Plus, Call(_, _), If(_, _, _)), (Plus, ConstDecl(_, _, _), Expr()), (Plus, Expr(), Expr()), (Plus, Function(_, _, _), Expr()), (Plus, If(_, _, _), Expr()), (Plus, N(_), Expr()), (Plus, Print(_), Expr()), (Plus, S(_), Call(_, _)), (Plus, S(_), Expr()), (Plus, Unary(_, _), Expr()), (Plus, Undefined, Expr()), (Plus, Var(_), Expr()), (Seq, B(_), Expr()), (Seq, Binary(_, _, _), Binary(_, _, _)), (Seq, Call(_, _), If(_, _, _)), (Seq, ConstDecl(_, _, _), Expr()), (Seq, Expr(), Expr()), (Seq, If(_, _, _), Expr()), (Seq, S(_), Call(_, _)), (Seq, S(_), Expr()), (Seq, S(_), Unary(_, _)), (Times, B(_), Binary(_, _, _)), (Times, B(_), Expr()), (Times, Binary(_, _, _), B(_)), (Times, Binary(_, _, _), Binary(_, _, _)), (Times, Binary(_, _, _), ConstDecl(_, _, _)), (Times, Binary(_, _, _), Expr()), (Times, Binary(_, _, _), Function(_, _, _)), (Times, Binary(_, _, _), N(_)), (Times, Binary(_, _, _), Print(_)), (Times, Binary(_, _, _), S(_)), (Times, Binary(_, _, _), Unary(_, _)), (Times, Binary(_, _, _), Undefined), (Times, Binary(_, _, _), Var(_)), (Times, Call(_, _), Binary(_, _, _)), (Times, Call(_, _), If(_, _, _)), (Times, ConstDecl(_, _, _), Binary(_, _, _)), (Times, ConstDecl(_, _, _), Expr()), (Times, Expr(), Expr()), (Times, Function(_, _, _), Binary(_, _, _)), (Times, If(_, _, _), Binary(_, _, _)), (Times, If(_, _, _), Expr()), (Times, N(_), Binary(_, _, _)), (Times, Print(_), Binary(_, _, _)), (Times, S(_), Call(_, _)), (Times, Unary(_, _), Binary(_, _, _)), (Times, Undefined, Binary(_, _, _)), (Times, Var(_), Binary(_, _, _))[0m
[0m[[33mwarn[0m] [0m      case Binary(bop @ (Eq | Ne), v1, v2) if (isValue(v1) && isValue(v2)) => (bop, v1, v2) match {[0m
[0m[[33mwarn[0m] [0m                                                                              ^[0m
[0m[[33mwarn[0m] [0m/Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3-edzh3452.scala:307: match may not be exhaustive.[0m
[0m[[33mwarn[0m] [0mIt would fail on the following inputs: Div, Eq, Ge, Gt, Le, Lt, Minus, Ne, Plus, Seq, Times[0m
[0m[[33mwarn[0m] [0m      case Binary(bop @ (And | Or), v1, v2) if (isValue(v1) && isValue(v2)) => bop match {[0m
[0m[[33mwarn[0m] [0m                                                                               ^[0m
[0m[[33mwarn[0m] [0m5 warnings found[0m
[0m[[0mdebug[0m] [0mScala compilation took 10.106133035 s[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3-edzh3452.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3-edzh3452.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3-edzh3452.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3-edzh3452.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3-edzh3452.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, anonOption, wait, step, $asInstanceOf, keepGoing, equals, Env, asInstanceOf, toNumber, emp, evaluate, synchronized, isJsy, $isInstanceOf, main, extend, toStr, notifyAll, Lab3, debug, flagOptions, isInstanceOf, eval, toBoolean, ==, clone, substitute, toString, iterateStep, !=, get, getClass, inequalityVal, ne, eq, ##, finalize, hashCode, handle, processFile.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/jsy/lab3/ast.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/jsy/lab3/ast.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/jsy/lab3/ast.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/jsy/lab3/ast.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/jsy/lab3/ast.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	e, notify, unapply, s, curried, x, printStackTrace, getLocalizedMessage, wait, Function, Unary, copy$default$2, $asInstanceOf, n, compose, Var, e1, N, productArity, equals, Print, closed, uop, fillInStackTrace, Bop, initCause, asInstanceOf, Undefined, pretty, Expr, pos, synchronized, freeVars, And, $isInstanceOf, isValue, andThen, getCause, tupled, canEqual, Lt, Gt, Ne, ConstDecl, productPrefix, notifyAll, readResolve, Plus, isInstanceOf, DynamicTypeError, getStackTrace, getStackTraceElement, Minus, Neg, <init>, Seq, Le, getMessage, Uop, setStackTrace, b, apply, e3, getSuppressed, B, Eq, ==, If, getStackTraceDepth, clone, Binary, bop, addSuppressed, setPos, p, copy$default$3, Not, copy, toString, !=, Times, getClass, copy$default$1, ast, e2, Ge, ne, Call, eq, Div, productIterator, ##, finalize, productElement, hashCode, Or, S.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/edward/Dropbox/Principles of Programming Languages/Lab3/src/main/scala/Lab3-edzh3452.scala: Set(e, s, x, n, e1, closed, uop, Bop, asInstanceOf, Undefined, pretty, Expr, And, isValue, Lt, Gt, Ne, Plus, isInstanceOf, DynamicTypeError, Minus, Neg, <init>, Seq, Le, b, apply, e3, Eq, ==, bop, p, Not, toString, !=, Times, ast, e2, Ge, ne, Div, Or)[0m
[0m[[0mdebug[0m] [0mNew invalidations:[0m
[0m[[0mdebug[0m] [0m	Set()[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set()[0m
[0m[[0mdebug[0m] [0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0mdebug[0m] [0m	Set()[0m
[0m[[0mdebug[0m] [0mAll newly invalidated sources after taking into account (previously) recompiled sources:Set()[0m
