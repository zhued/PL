[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0mInitial source changes: [0m
[0m[[0mdebug[0m] [0m	removed:Set()[0m
[0m[[0mdebug[0m] [0m	added: Set()[0m
[0m[[0mdebug[0m] [0m	modified: Set(/home/edward/Dropbox/Principles of Programming Languages/lab3/src/main/scala/Lab3.scala)[0m
[0m[[0mdebug[0m] [0mRemoved products: Set()[0m
[0m[[0mdebug[0m] [0mExternal API changes: API Changes: Set()[0m
[0m[[0mdebug[0m] [0mModified binary dependencies: Set()[0m
[0m[[0mdebug[0m] [0mInitial directly invalidated sources: Set(/home/edward/Dropbox/Principles of Programming Languages/lab3/src/main/scala/Lab3.scala)[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0mSources indirectly invalidated by:[0m
[0m[[0mdebug[0m] [0m	product: Set()[0m
[0m[[0mdebug[0m] [0m	binary dep: Set()[0m
[0m[[0mdebug[0m] [0m	external source: Set()[0m
[0m[[0mdebug[0m] [0mAll initially invalidated sources: Set(/home/edward/Dropbox/Principles of Programming Languages/lab3/src/main/scala/Lab3.scala)[0m
[0m[[0minfo[0m] [0mCompiling 1 Scala source to /home/edward/Dropbox/Principles of Programming Languages/lab3/target/scala-2.10/classes...[0m
[0m[[0mdebug[0m] [0mGetting compiler-interface from component compiler for Scala 2.10.3[0m
[0m[[0mdebug[0m] [0mGetting compiler-interface from component compiler for Scala 2.10.3[0m
[0m[[0mdebug[0m] [0mRunning cached compiler 1185f718, interfacing (CompilerInterface) with Scala compiler version 2.10.3[0m
[0m[[0mdebug[0m] [0mCalling Scala compiler with arguments  (CompilerInterface):[0m
[0m[[0mdebug[0m] [0m	-bootclasspath[0m
[0m[[0mdebug[0m] [0m	/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/classes:/home/edward/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.10.3.jar[0m
[0m[[0mdebug[0m] [0m	-classpath[0m
[0m[[0mdebug[0m] [0m	/home/edward/Dropbox/Principles of Programming Languages/lab3/target/scala-2.10/classes:/home/edward/Dropbox/Principles of Programming Languages/lab3/lib/scalatest_2.10-2.0.jar:/home/edward/Dropbox/Principles of Programming Languages/lab3/lib/liblab3.jar[0m
[0m[[33mwarn[0m] [0m/home/edward/Dropbox/Principles of Programming Languages/lab3/src/main/scala/Lab3.scala:251: match may not be exhaustive.[0m
[0m[[33mwarn[0m] [0mIt would fail on the following inputs: And, Eq, Ge, Gt, Le, Lt, Ne, Or, Plus, Seq[0m
[0m[[33mwarn[0m] [0m      case Binary(bop @ (Minus | Times | Div), v1, v2) if (isValue(v1) && isValue(v2)) => bop match {[0m
[0m[[33mwarn[0m] [0m                                                                                          ^[0m
[0m[[33mwarn[0m] [0m/home/edward/Dropbox/Principles of Programming Languages/lab3/src/main/scala/Lab3.scala:258: match may not be exhaustive.[0m
[0m[[33mwarn[0m] [0mIt would fail on the following inputs: And, Div, Eq, Minus, Ne, Or, Plus, Seq, Times[0m
[0m[[33mwarn[0m] [0m      case Binary(bop @ (Lt | Le | Gt | Ge), v1, v2) if (isValue(v1) && isValue(v2)) => bop match {[0m
[0m[[33mwarn[0m] [0m                                                                                        ^[0m
[0m[[33mwarn[0m] [0m/home/edward/Dropbox/Principles of Programming Languages/lab3/src/main/scala/Lab3.scala:266: match may not be exhaustive.[0m
[0m[[33mwarn[0m] [0mIt would fail on the following inputs: And, Div, Eq, Minus, Ne, Or, Plus, Seq, Times[0m
[0m[[33mwarn[0m] [0m      case Binary(bop @ (Lt | Le | Gt | Ge), S(v1), S(v2)) => bop match {[0m
[0m[[33mwarn[0m] [0m                                                              ^[0m
[0m[[33mwarn[0m] [0m/home/edward/Dropbox/Principles of Programming Languages/lab3/src/main/scala/Lab3.scala:274: match may not be exhaustive.[0m
[0m[[33mwarn[0m] [0mIt would fail on the following inputs: (And, Binary(_, _, _), Undefined), (And, Expr(), Binary(_, _, _)), (And, Expr(), Expr()), (And, Expr(), Print(_)), (And, Expr(), S(_)), (And, Expr(), Undefined), (And, Expr(), Var(_)), (And, Print(_), N(_)), (And, Undefined, Function(_, _, _)), (Bop(), B(_), Var(_)), (Bop(), Call(_, _), Var(_)), (Bop(), ConstDecl(_, _, _), Var(_)), (Bop(), Expr(), B(_)), (Bop(), Expr(), Binary(_, _, _)), (Bop(), Expr(), Call(_, _)), (Bop(), Expr(), ConstDecl(_, _, _)), (Bop(), Expr(), Function(_, _, _)), (Bop(), Expr(), If(_, _, _)), (Bop(), Expr(), N(_)), (Bop(), Expr(), Print(_)), (Bop(), Expr(), S(_)), (Bop(), Expr(), Unary(_, _)), (Bop(), Expr(), Undefined), (Bop(), Expr(), Var(_)), (Bop(), Function(_, _, _), N(_)), (Bop(), Function(_, _, _), Var(_)), (Bop(), If(_, _, _), Binary(_, _, _)), (Bop(), If(_, _, _), Var(_)), (Bop(), N(_), Var(_)), (Bop(), S(_), Var(_)), (Bop(), Unary(_, _), Var(_)), (Bop(), Undefined, Var(_)), (Bop(), Var(_), B(_)), (Bop(), Var(_), Binary(_, _, _)), (Bop(), Var(_), Call(_, _)), (Bop(), Var(_), ConstDecl(_, _, _)), (Bop(), Var(_), Function(_, _, _)), (Bop(), Var(_), If(_, _, _)), (Bop(), Var(_), Print(_)), (Bop(), Var(_), S(_)), (Bop(), Var(_), Unary(_, _)), (Bop(), Var(_), Undefined), (Bop(), Var(_), Var(_)), (Div, B(_), N(_)), (Div, Binary(_, _, _), N(_)), (Div, Binary(_, _, _), Undefined), (Div, Call(_, _), N(_)), (Div, ConstDecl(_, _, _), N(_)), (Div, Function(_, _, _), N(_)), (Div, If(_, _, _), Binary(_, _, _)), (Div, If(_, _, _), N(_)), (Div, N(_), N(_)), (Div, Print(_), B(_)), (Div, Print(_), Binary(_, _, _)), (Div, Print(_), Call(_, _)), (Div, Print(_), ConstDecl(_, _, _)), (Div, Print(_), Function(_, _, _)), (Div, Print(_), If(_, _, _)), (Div, Print(_), N(_)), (Div, Print(_), Print(_)), (Div, Print(_), S(_)), (Div, Print(_), Unary(_, _)), (Div, Print(_), Undefined), (Div, Print(_), Var(_)), (Div, S(_), N(_)), (Div, Unary(_, _), N(_)), (Div, Undefined, N(_)), (Div, Var(_), N(_)), (Ge, Binary(_, _, _), Undefined), (Ge, Expr(), Binary(_, _, _)), (Ge, Expr(), Expr()), (Ge, Expr(), Print(_)), (Ge, Expr(), S(_)), (Ge, Print(_), N(_)), (Ge, Undefined, Function(_, _, _)), (Gt, Binary(_, _, _), Undefined), (Gt, Expr(), Binary(_, _, _)), (Gt, Expr(), Expr()), (Gt, Expr(), N(_)), (Gt, Expr(), Print(_)), (Gt, Expr(), S(_)), (Gt, Function(_, _, _), N(_)), (Gt, Print(_), N(_)), (Gt, Undefined, Function(_, _, _)), (Le, Binary(_, _, _), Undefined), (Le, Expr(), B(_)), (Le, Expr(), Binary(_, _, _)), (Le, Expr(), Call(_, _)), (Le, Expr(), ConstDecl(_, _, _)), (Le, Expr(), Expr()), (Le, Expr(), Function(_, _, _)), (Le, Expr(), If(_, _, _)), (Le, Expr(), Print(_)), (Le, Expr(), S(_)), (Le, Expr(), Unary(_, _)), (Le, Expr(), Var(_)), (Le, Print(_), N(_)), (Le, Undefined, Function(_, _, _)), (Lt, Binary(_, _, _), Undefined), (Lt, Expr(), B(_)), (Lt, Expr(), Binary(_, _, _)), (Lt, Expr(), Call(_, _)), (Lt, Expr(), ConstDecl(_, _, _)), (Lt, Expr(), Expr()), (Lt, Expr(), Function(_, _, _)), (Lt, Expr(), If(_, _, _)), (Lt, Expr(), Print(_)), (Lt, Expr(), S(_)), (Lt, Expr(), Unary(_, _)), (Lt, Expr(), Var(_)), (Lt, Print(_), N(_)), (Lt, Undefined, Function(_, _, _)), (Minus, B(_), Function(_, _, _)), (Minus, Binary(_, _, _), Function(_, _, _)), (Minus, Binary(_, _, _), Undefined), (Minus, Call(_, _), Function(_, _, _)), (Minus, ConstDecl(_, _, _), Function(_, _, _)), (Minus, Expr(), Binary(_, _, _)), (Minus, Expr(), Expr()), (Minus, Expr(), Print(_)), (Minus, Expr(), S(_)), (Minus, Function(_, _, _), Function(_, _, _)), (Minus, If(_, _, _), Function(_, _, _)), (Minus, N(_), Function(_, _, _)), (Minus, Print(_), N(_)), (Minus, S(_), Function(_, _, _)), (Minus, Unary(_, _), Function(_, _, _)), (Minus, Undefined, B(_)), (Minus, Undefined, Binary(_, _, _)), (Minus, Undefined, Call(_, _)), (Minus, Undefined, ConstDecl(_, _, _)), (Minus, Undefined, Function(_, _, _)), (Minus, Undefined, If(_, _, _)), (Minus, Undefined, Print(_)), (Minus, Undefined, S(_)), (Minus, Undefined, Unary(_, _)), (Minus, Undefined, Undefined), (Minus, Undefined, Var(_)), (Minus, Var(_), Function(_, _, _)), (Or, Binary(_, _, _), Undefined), (Or, Expr(), B(_)), (Or, Expr(), Binary(_, _, _)), (Or, Expr(), Call(_, _)), (Or, Expr(), ConstDecl(_, _, _)), (Or, Expr(), Function(_, _, _)), (Or, Expr(), If(_, _, _)), (Or, Expr(), N(_)), (Or, Expr(), Print(_)), (Or, Expr(), S(_)), (Or, Expr(), Unary(_, _)), (Or, Expr(), Undefined), (Or, Expr(), Var(_)), (Or, Print(_), N(_)), (Or, Undefined, Function(_, _, _)), (Plus, Binary(_, _, _), Undefined), (Plus, Expr(), Binary(_, _, _)), (Plus, Expr(), Expr()), (Plus, Expr(), Print(_)), (Plus, Expr(), S(_)), (Plus, Expr(), Undefined), (Plus, Print(_), N(_)), (Plus, Undefined, Function(_, _, _)), (Seq, Binary(_, _, _), Undefined), (Seq, Expr(), Binary(_, _, _)), (Seq, Expr(), Expr()), (Seq, Expr(), Print(_)), (Seq, Expr(), S(_)), (Seq, Print(_), N(_)), (Seq, Undefined, Function(_, _, _)), (Times, B(_), Undefined), (Times, Binary(_, _, _), B(_)), (Times, Binary(_, _, _), Binary(_, _, _)), (Times, Binary(_, _, _), Call(_, _)), (Times, Binary(_, _, _), ConstDecl(_, _, _)), (Times, Binary(_, _, _), Function(_, _, _)), (Times, Binary(_, _, _), If(_, _, _)), (Times, Binary(_, _, _), N(_)), (Times, Binary(_, _, _), Print(_)), (Times, Binary(_, _, _), S(_)), (Times, Binary(_, _, _), Unary(_, _)), (Times, Binary(_, _, _), Undefined), (Times, Binary(_, _, _), Var(_)), (Times, Call(_, _), Undefined), (Times, ConstDecl(_, _, _), Undefined), (Times, Expr(), Binary(_, _, _)), (Times, Expr(), Expr()), (Times, Expr(), Function(_, _, _)), (Times, Function(_, _, _), Undefined), (Times, If(_, _, _), Undefined), (Times, N(_), Undefined), (Times, Print(_), N(_)), (Times, S(_), Undefined), (Times, Unary(_, _), Undefined), (Times, Undefined, Undefined), (Times, Var(_), Undefined)[0m
[0m[[33mwarn[0m] [0m      case Binary(bop @ (Eq | Ne), v1, v2) if (isValue(v1) && isValue(v2)) => (bop, v1, v2) match {[0m
[0m[[33mwarn[0m] [0m                                                                              ^[0m
[0m[[33mwarn[0m] [0m/home/edward/Dropbox/Principles of Programming Languages/lab3/src/main/scala/Lab3.scala:283: match may not be exhaustive.[0m
[0m[[33mwarn[0m] [0mIt would fail on the following inputs: Div, Eq, Ge, Gt, Le, Lt, Minus, Ne, Plus, Seq, Times[0m
[0m[[33mwarn[0m] [0m      case Binary(bop @ (And | Or), v1, v2) if (isValue(v1) && isValue(v2)) => bop match {[0m
[0m[[33mwarn[0m] [0m                                                                               ^[0m
[0m[[33mwarn[0m] [0m5 warnings found[0m
[0m[[0mdebug[0m] [0mScala compilation took 9.714027924 s[0m
[0m[[0mdebug[0m] [0mNew invalidations:[0m
[0m[[0mdebug[0m] [0m	Set()[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set()[0m
[0m[[0mdebug[0m] [0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0mdebug[0m] [0m	Set()[0m
[0m[[0mdebug[0m] [0mAll newly invalidated sources after taking into account (previously) recompiled sources:Set()[0m
